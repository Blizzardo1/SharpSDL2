#region License
/* SDL2# - C# Wrapper for SDL2
 *
 * Copyright (c) 2013-2020 Ethan Lee.
 *
 * This software is provided 'as-is', without any express or implied warranty.
 * In no event will the authors be held liable for any damages arising from
 * the use of this software.
 *
 * Permission is granted to anyone to use this software for any purpose,
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 *
 * 1. The origin of this software must not be misrepresented; you must not
 * claim that you wrote the original software. If you use this software in a
 * product, an acknowledgment in the product documentation would be
 * appreciated but is not required.
 *
 * 2. Altered source versions must be plainly marked as such, and must not be
 * misrepresented as being the original software.
 *
 * 3. This notice may not be removed or altered from any source distribution.
 *
 * Ethan "flibitijibibo" Lee <flibitijibibo@flibitijibibo.com>
 *
 */
#endregion


#region Using Statements
using System;
using System.Runtime.InteropServices;
#endregion
namespace SDL2
{
    public static partial class SDL
    {


		#region keycode.h

		public const int SDLK_SCANCODE_MASK = (1 << 30);
		public static Keycode SCANCODE_TO_KEYCODE(Scancode X)
		{
			return (Keycode)((int)X | SDLK_SCANCODE_MASK);
		}

		/* So, in the C headers, Keycode is a typedef of Sint32
		 * and all of the names are in an anonymous enum. Yeah...
		 * that's not going to cut it for C#. We'll just put them in an
		 * enum for now? */
		public enum Keycode
		{
			SDLK_UNKNOWN = 0,

			SDLK_RETURN = '\r',
			SDLK_ESCAPE = 27, // '\033'
			SDLK_BACKSPACE = '\b',
			SDLK_TAB = '\t',
			SDLK_SPACE = ' ',
			SDLK_EXCLAIM = '!',
			SDLK_QUOTEDBL = '"',
			SDLK_HASH = '#',
			SDLK_PERCENT = '%',
			SDLK_DOLLAR = '$',
			SDLK_AMPERSAND = '&',
			SDLK_QUOTE = '\'',
			SDLK_LEFTPAREN = '(',
			SDLK_RIGHTPAREN = ')',
			SDLK_ASTERISK = '*',
			SDLK_PLUS = '+',
			SDLK_COMMA = ',',
			SDLK_MINUS = '-',
			SDLK_PERIOD = '.',
			SDLK_SLASH = '/',
			SDLK_0 = '0',
			SDLK_1 = '1',
			SDLK_2 = '2',
			SDLK_3 = '3',
			SDLK_4 = '4',
			SDLK_5 = '5',
			SDLK_6 = '6',
			SDLK_7 = '7',
			SDLK_8 = '8',
			SDLK_9 = '9',
			SDLK_COLON = ':',
			SDLK_SEMICOLON = ';',
			SDLK_LESS = '<',
			SDLK_EQUALS = '=',
			SDLK_GREATER = '>',
			SDLK_QUESTION = '?',
			SDLK_AT = '@',
			/*
			Skip uppercase letters
			*/
			SDLK_LEFTBRACKET = '[',
			SDLK_BACKSLASH = '\\',
			SDLK_RIGHTBRACKET = ']',
			SDLK_CARET = '^',
			SDLK_UNDERSCORE = '_',
			SDLK_BACKQUOTE = '`',
			SDLK_a = 'a',
			SDLK_b = 'b',
			SDLK_c = 'c',
			SDLK_d = 'd',
			SDLK_e = 'e',
			SDLK_f = 'f',
			SDLK_g = 'g',
			SDLK_h = 'h',
			SDLK_i = 'i',
			SDLK_j = 'j',
			SDLK_k = 'k',
			SDLK_l = 'l',
			SDLK_m = 'm',
			SDLK_n = 'n',
			SDLK_o = 'o',
			SDLK_p = 'p',
			SDLK_q = 'q',
			SDLK_r = 'r',
			SDLK_s = 's',
			SDLK_t = 't',
			SDLK_u = 'u',
			SDLK_v = 'v',
			SDLK_w = 'w',
			SDLK_x = 'x',
			SDLK_y = 'y',
			SDLK_z = 'z',

			SDLK_CAPSLOCK = (int)Scancode.SCANCODE_CAPSLOCK | SDLK_SCANCODE_MASK,

			SDLK_F1 = (int)Scancode.SCANCODE_F1 | SDLK_SCANCODE_MASK,
			SDLK_F2 = (int)Scancode.SCANCODE_F2 | SDLK_SCANCODE_MASK,
			SDLK_F3 = (int)Scancode.SCANCODE_F3 | SDLK_SCANCODE_MASK,
			SDLK_F4 = (int)Scancode.SCANCODE_F4 | SDLK_SCANCODE_MASK,
			SDLK_F5 = (int)Scancode.SCANCODE_F5 | SDLK_SCANCODE_MASK,
			SDLK_F6 = (int)Scancode.SCANCODE_F6 | SDLK_SCANCODE_MASK,
			SDLK_F7 = (int)Scancode.SCANCODE_F7 | SDLK_SCANCODE_MASK,
			SDLK_F8 = (int)Scancode.SCANCODE_F8 | SDLK_SCANCODE_MASK,
			SDLK_F9 = (int)Scancode.SCANCODE_F9 | SDLK_SCANCODE_MASK,
			SDLK_F10 = (int)Scancode.SCANCODE_F10 | SDLK_SCANCODE_MASK,
			SDLK_F11 = (int)Scancode.SCANCODE_F11 | SDLK_SCANCODE_MASK,
			SDLK_F12 = (int)Scancode.SCANCODE_F12 | SDLK_SCANCODE_MASK,

			SDLK_PRINTSCREEN = (int)Scancode.SCANCODE_PRINTSCREEN | SDLK_SCANCODE_MASK,
			SDLK_SCROLLLOCK = (int)Scancode.SCANCODE_SCROLLLOCK | SDLK_SCANCODE_MASK,
			SDLK_PAUSE = (int)Scancode.SCANCODE_PAUSE | SDLK_SCANCODE_MASK,
			SDLK_INSERT = (int)Scancode.SCANCODE_INSERT | SDLK_SCANCODE_MASK,
			SDLK_HOME = (int)Scancode.SCANCODE_HOME | SDLK_SCANCODE_MASK,
			SDLK_PAGEUP = (int)Scancode.SCANCODE_PAGEUP | SDLK_SCANCODE_MASK,
			SDLK_DELETE = 127,
			SDLK_END = (int)Scancode.SCANCODE_END | SDLK_SCANCODE_MASK,
			SDLK_PAGEDOWN = (int)Scancode.SCANCODE_PAGEDOWN | SDLK_SCANCODE_MASK,
			SDLK_RIGHT = (int)Scancode.SCANCODE_RIGHT | SDLK_SCANCODE_MASK,
			SDLK_LEFT = (int)Scancode.SCANCODE_LEFT | SDLK_SCANCODE_MASK,
			SDLK_DOWN = (int)Scancode.SCANCODE_DOWN | SDLK_SCANCODE_MASK,
			SDLK_UP = (int)Scancode.SCANCODE_UP | SDLK_SCANCODE_MASK,

			SDLK_NUMLOCKCLEAR = (int)Scancode.SCANCODE_NUMLOCKCLEAR | SDLK_SCANCODE_MASK,
			SDLK_KP_DIVIDE = (int)Scancode.SCANCODE_KP_DIVIDE | SDLK_SCANCODE_MASK,
			SDLK_KP_MULTIPLY = (int)Scancode.SCANCODE_KP_MULTIPLY | SDLK_SCANCODE_MASK,
			SDLK_KP_MINUS = (int)Scancode.SCANCODE_KP_MINUS | SDLK_SCANCODE_MASK,
			SDLK_KP_PLUS = (int)Scancode.SCANCODE_KP_PLUS | SDLK_SCANCODE_MASK,
			SDLK_KP_ENTER = (int)Scancode.SCANCODE_KP_ENTER | SDLK_SCANCODE_MASK,
			SDLK_KP_1 = (int)Scancode.SCANCODE_KP_1 | SDLK_SCANCODE_MASK,
			SDLK_KP_2 = (int)Scancode.SCANCODE_KP_2 | SDLK_SCANCODE_MASK,
			SDLK_KP_3 = (int)Scancode.SCANCODE_KP_3 | SDLK_SCANCODE_MASK,
			SDLK_KP_4 = (int)Scancode.SCANCODE_KP_4 | SDLK_SCANCODE_MASK,
			SDLK_KP_5 = (int)Scancode.SCANCODE_KP_5 | SDLK_SCANCODE_MASK,
			SDLK_KP_6 = (int)Scancode.SCANCODE_KP_6 | SDLK_SCANCODE_MASK,
			SDLK_KP_7 = (int)Scancode.SCANCODE_KP_7 | SDLK_SCANCODE_MASK,
			SDLK_KP_8 = (int)Scancode.SCANCODE_KP_8 | SDLK_SCANCODE_MASK,
			SDLK_KP_9 = (int)Scancode.SCANCODE_KP_9 | SDLK_SCANCODE_MASK,
			SDLK_KP_0 = (int)Scancode.SCANCODE_KP_0 | SDLK_SCANCODE_MASK,
			SDLK_KP_PERIOD = (int)Scancode.SCANCODE_KP_PERIOD | SDLK_SCANCODE_MASK,

			SDLK_APPLICATION = (int)Scancode.SCANCODE_APPLICATION | SDLK_SCANCODE_MASK,
			SDLK_POWER = (int)Scancode.SCANCODE_POWER | SDLK_SCANCODE_MASK,
			SDLK_KP_EQUALS = (int)Scancode.SCANCODE_KP_EQUALS | SDLK_SCANCODE_MASK,
			SDLK_F13 = (int)Scancode.SCANCODE_F13 | SDLK_SCANCODE_MASK,
			SDLK_F14 = (int)Scancode.SCANCODE_F14 | SDLK_SCANCODE_MASK,
			SDLK_F15 = (int)Scancode.SCANCODE_F15 | SDLK_SCANCODE_MASK,
			SDLK_F16 = (int)Scancode.SCANCODE_F16 | SDLK_SCANCODE_MASK,
			SDLK_F17 = (int)Scancode.SCANCODE_F17 | SDLK_SCANCODE_MASK,
			SDLK_F18 = (int)Scancode.SCANCODE_F18 | SDLK_SCANCODE_MASK,
			SDLK_F19 = (int)Scancode.SCANCODE_F19 | SDLK_SCANCODE_MASK,
			SDLK_F20 = (int)Scancode.SCANCODE_F20 | SDLK_SCANCODE_MASK,
			SDLK_F21 = (int)Scancode.SCANCODE_F21 | SDLK_SCANCODE_MASK,
			SDLK_F22 = (int)Scancode.SCANCODE_F22 | SDLK_SCANCODE_MASK,
			SDLK_F23 = (int)Scancode.SCANCODE_F23 | SDLK_SCANCODE_MASK,
			SDLK_F24 = (int)Scancode.SCANCODE_F24 | SDLK_SCANCODE_MASK,
			SDLK_EXECUTE = (int)Scancode.SCANCODE_EXECUTE | SDLK_SCANCODE_MASK,
			SDLK_HELP = (int)Scancode.SCANCODE_HELP | SDLK_SCANCODE_MASK,
			SDLK_MENU = (int)Scancode.SCANCODE_MENU | SDLK_SCANCODE_MASK,
			SDLK_SELECT = (int)Scancode.SCANCODE_SELECT | SDLK_SCANCODE_MASK,
			SDLK_STOP = (int)Scancode.SCANCODE_STOP | SDLK_SCANCODE_MASK,
			SDLK_AGAIN = (int)Scancode.SCANCODE_AGAIN | SDLK_SCANCODE_MASK,
			SDLK_UNDO = (int)Scancode.SCANCODE_UNDO | SDLK_SCANCODE_MASK,
			SDLK_CUT = (int)Scancode.SCANCODE_CUT | SDLK_SCANCODE_MASK,
			SDLK_COPY = (int)Scancode.SCANCODE_COPY | SDLK_SCANCODE_MASK,
			SDLK_PASTE = (int)Scancode.SCANCODE_PASTE | SDLK_SCANCODE_MASK,
			SDLK_FIND = (int)Scancode.SCANCODE_FIND | SDLK_SCANCODE_MASK,
			SDLK_MUTE = (int)Scancode.SCANCODE_MUTE | SDLK_SCANCODE_MASK,
			SDLK_VOLUMEUP = (int)Scancode.SCANCODE_VOLUMEUP | SDLK_SCANCODE_MASK,
			SDLK_VOLUMEDOWN = (int)Scancode.SCANCODE_VOLUMEDOWN | SDLK_SCANCODE_MASK,
			SDLK_KP_COMMA = (int)Scancode.SCANCODE_KP_COMMA | SDLK_SCANCODE_MASK,
			SDLK_KP_EQUALSAS400 =
			(int)Scancode.SCANCODE_KP_EQUALSAS400 | SDLK_SCANCODE_MASK,

			SDLK_ALTERASE = (int)Scancode.SCANCODE_ALTERASE | SDLK_SCANCODE_MASK,
			SDLK_SYSREQ = (int)Scancode.SCANCODE_SYSREQ | SDLK_SCANCODE_MASK,
			SDLK_CANCEL = (int)Scancode.SCANCODE_CANCEL | SDLK_SCANCODE_MASK,
			SDLK_CLEAR = (int)Scancode.SCANCODE_CLEAR | SDLK_SCANCODE_MASK,
			SDLK_PRIOR = (int)Scancode.SCANCODE_PRIOR | SDLK_SCANCODE_MASK,
			SDLK_RETURN2 = (int)Scancode.SCANCODE_RETURN2 | SDLK_SCANCODE_MASK,
			SDLK_SEPARATOR = (int)Scancode.SCANCODE_SEPARATOR | SDLK_SCANCODE_MASK,
			SDLK_OUT = (int)Scancode.SCANCODE_OUT | SDLK_SCANCODE_MASK,
			SDLK_OPER = (int)Scancode.SCANCODE_OPER | SDLK_SCANCODE_MASK,
			SDLK_CLEARAGAIN = (int)Scancode.SCANCODE_CLEARAGAIN | SDLK_SCANCODE_MASK,
			SDLK_CRSEL = (int)Scancode.SCANCODE_CRSEL | SDLK_SCANCODE_MASK,
			SDLK_EXSEL = (int)Scancode.SCANCODE_EXSEL | SDLK_SCANCODE_MASK,

			SDLK_KP_00 = (int)Scancode.SCANCODE_KP_00 | SDLK_SCANCODE_MASK,
			SDLK_KP_000 = (int)Scancode.SCANCODE_KP_000 | SDLK_SCANCODE_MASK,
			SDLK_THOUSANDSSEPARATOR =
			(int)Scancode.SCANCODE_THOUSANDSSEPARATOR | SDLK_SCANCODE_MASK,
			SDLK_DECIMALSEPARATOR =
			(int)Scancode.SCANCODE_DECIMALSEPARATOR | SDLK_SCANCODE_MASK,
			SDLK_CURRENCYUNIT = (int)Scancode.SCANCODE_CURRENCYUNIT | SDLK_SCANCODE_MASK,
			SDLK_CURRENCYSUBUNIT =
			(int)Scancode.SCANCODE_CURRENCYSUBUNIT | SDLK_SCANCODE_MASK,
			SDLK_KP_LEFTPAREN = (int)Scancode.SCANCODE_KP_LEFTPAREN | SDLK_SCANCODE_MASK,
			SDLK_KP_RIGHTPAREN = (int)Scancode.SCANCODE_KP_RIGHTPAREN | SDLK_SCANCODE_MASK,
			SDLK_KP_LEFTBRACE = (int)Scancode.SCANCODE_KP_LEFTBRACE | SDLK_SCANCODE_MASK,
			SDLK_KP_RIGHTBRACE = (int)Scancode.SCANCODE_KP_RIGHTBRACE | SDLK_SCANCODE_MASK,
			SDLK_KP_TAB = (int)Scancode.SCANCODE_KP_TAB | SDLK_SCANCODE_MASK,
			SDLK_KP_BACKSPACE = (int)Scancode.SCANCODE_KP_BACKSPACE | SDLK_SCANCODE_MASK,
			SDLK_KP_A = (int)Scancode.SCANCODE_KP_A | SDLK_SCANCODE_MASK,
			SDLK_KP_B = (int)Scancode.SCANCODE_KP_B | SDLK_SCANCODE_MASK,
			SDLK_KP_C = (int)Scancode.SCANCODE_KP_C | SDLK_SCANCODE_MASK,
			SDLK_KP_D = (int)Scancode.SCANCODE_KP_D | SDLK_SCANCODE_MASK,
			SDLK_KP_E = (int)Scancode.SCANCODE_KP_E | SDLK_SCANCODE_MASK,
			SDLK_KP_F = (int)Scancode.SCANCODE_KP_F | SDLK_SCANCODE_MASK,
			SDLK_KP_XOR = (int)Scancode.SCANCODE_KP_XOR | SDLK_SCANCODE_MASK,
			SDLK_KP_POWER = (int)Scancode.SCANCODE_KP_POWER | SDLK_SCANCODE_MASK,
			SDLK_KP_PERCENT = (int)Scancode.SCANCODE_KP_PERCENT | SDLK_SCANCODE_MASK,
			SDLK_KP_LESS = (int)Scancode.SCANCODE_KP_LESS | SDLK_SCANCODE_MASK,
			SDLK_KP_GREATER = (int)Scancode.SCANCODE_KP_GREATER | SDLK_SCANCODE_MASK,
			SDLK_KP_AMPERSAND = (int)Scancode.SCANCODE_KP_AMPERSAND | SDLK_SCANCODE_MASK,
			SDLK_KP_DBLAMPERSAND =
			(int)Scancode.SCANCODE_KP_DBLAMPERSAND | SDLK_SCANCODE_MASK,
			SDLK_KP_VERTICALBAR =
			(int)Scancode.SCANCODE_KP_VERTICALBAR | SDLK_SCANCODE_MASK,
			SDLK_KP_DBLVERTICALBAR =
			(int)Scancode.SCANCODE_KP_DBLVERTICALBAR | SDLK_SCANCODE_MASK,
			SDLK_KP_COLON = (int)Scancode.SCANCODE_KP_COLON | SDLK_SCANCODE_MASK,
			SDLK_KP_HASH = (int)Scancode.SCANCODE_KP_HASH | SDLK_SCANCODE_MASK,
			SDLK_KP_SPACE = (int)Scancode.SCANCODE_KP_SPACE | SDLK_SCANCODE_MASK,
			SDLK_KP_AT = (int)Scancode.SCANCODE_KP_AT | SDLK_SCANCODE_MASK,
			SDLK_KP_EXCLAM = (int)Scancode.SCANCODE_KP_EXCLAM | SDLK_SCANCODE_MASK,
			SDLK_KP_MEMSTORE = (int)Scancode.SCANCODE_KP_MEMSTORE | SDLK_SCANCODE_MASK,
			SDLK_KP_MEMRECALL = (int)Scancode.SCANCODE_KP_MEMRECALL | SDLK_SCANCODE_MASK,
			SDLK_KP_MEMCLEAR = (int)Scancode.SCANCODE_KP_MEMCLEAR | SDLK_SCANCODE_MASK,
			SDLK_KP_MEMADD = (int)Scancode.SCANCODE_KP_MEMADD | SDLK_SCANCODE_MASK,
			SDLK_KP_MEMSUBTRACT =
			(int)Scancode.SCANCODE_KP_MEMSUBTRACT | SDLK_SCANCODE_MASK,
			SDLK_KP_MEMMULTIPLY =
			(int)Scancode.SCANCODE_KP_MEMMULTIPLY | SDLK_SCANCODE_MASK,
			SDLK_KP_MEMDIVIDE = (int)Scancode.SCANCODE_KP_MEMDIVIDE | SDLK_SCANCODE_MASK,
			SDLK_KP_PLUSMINUS = (int)Scancode.SCANCODE_KP_PLUSMINUS | SDLK_SCANCODE_MASK,
			SDLK_KP_CLEAR = (int)Scancode.SCANCODE_KP_CLEAR | SDLK_SCANCODE_MASK,
			SDLK_KP_CLEARENTRY = (int)Scancode.SCANCODE_KP_CLEARENTRY | SDLK_SCANCODE_MASK,
			SDLK_KP_BINARY = (int)Scancode.SCANCODE_KP_BINARY | SDLK_SCANCODE_MASK,
			SDLK_KP_OCTAL = (int)Scancode.SCANCODE_KP_OCTAL | SDLK_SCANCODE_MASK,
			SDLK_KP_DECIMAL = (int)Scancode.SCANCODE_KP_DECIMAL | SDLK_SCANCODE_MASK,
			SDLK_KP_HEXADECIMAL =
			(int)Scancode.SCANCODE_KP_HEXADECIMAL | SDLK_SCANCODE_MASK,

			SDLK_LCTRL = (int)Scancode.SCANCODE_LCTRL | SDLK_SCANCODE_MASK,
			SDLK_LSHIFT = (int)Scancode.SCANCODE_LSHIFT | SDLK_SCANCODE_MASK,
			SDLK_LALT = (int)Scancode.SCANCODE_LALT | SDLK_SCANCODE_MASK,
			SDLK_LGUI = (int)Scancode.SCANCODE_LGUI | SDLK_SCANCODE_MASK,
			SDLK_RCTRL = (int)Scancode.SCANCODE_RCTRL | SDLK_SCANCODE_MASK,
			SDLK_RSHIFT = (int)Scancode.SCANCODE_RSHIFT | SDLK_SCANCODE_MASK,
			SDLK_RALT = (int)Scancode.SCANCODE_RALT | SDLK_SCANCODE_MASK,
			SDLK_RGUI = (int)Scancode.SCANCODE_RGUI | SDLK_SCANCODE_MASK,

			SDLK_MODE = (int)Scancode.SCANCODE_MODE | SDLK_SCANCODE_MASK,

			SDLK_AUDIONEXT = (int)Scancode.SCANCODE_AUDIONEXT | SDLK_SCANCODE_MASK,
			SDLK_AUDIOPREV = (int)Scancode.SCANCODE_AUDIOPREV | SDLK_SCANCODE_MASK,
			SDLK_AUDIOSTOP = (int)Scancode.SCANCODE_AUDIOSTOP | SDLK_SCANCODE_MASK,
			SDLK_AUDIOPLAY = (int)Scancode.SCANCODE_AUDIOPLAY | SDLK_SCANCODE_MASK,
			SDLK_AUDIOMUTE = (int)Scancode.SCANCODE_AUDIOMUTE | SDLK_SCANCODE_MASK,
			SDLK_MEDIASELECT = (int)Scancode.SCANCODE_MEDIASELECT | SDLK_SCANCODE_MASK,
			SDLK_WWW = (int)Scancode.SCANCODE_WWW | SDLK_SCANCODE_MASK,
			SDLK_MAIL = (int)Scancode.SCANCODE_MAIL | SDLK_SCANCODE_MASK,
			SDLK_CALCULATOR = (int)Scancode.SCANCODE_CALCULATOR | SDLK_SCANCODE_MASK,
			SDLK_COMPUTER = (int)Scancode.SCANCODE_COMPUTER | SDLK_SCANCODE_MASK,
			SDLK_AC_SEARCH = (int)Scancode.SCANCODE_AC_SEARCH | SDLK_SCANCODE_MASK,
			SDLK_AC_HOME = (int)Scancode.SCANCODE_AC_HOME | SDLK_SCANCODE_MASK,
			SDLK_AC_BACK = (int)Scancode.SCANCODE_AC_BACK | SDLK_SCANCODE_MASK,
			SDLK_AC_FORWARD = (int)Scancode.SCANCODE_AC_FORWARD | SDLK_SCANCODE_MASK,
			SDLK_AC_STOP = (int)Scancode.SCANCODE_AC_STOP | SDLK_SCANCODE_MASK,
			SDLK_AC_REFRESH = (int)Scancode.SCANCODE_AC_REFRESH | SDLK_SCANCODE_MASK,
			SDLK_AC_BOOKMARKS = (int)Scancode.SCANCODE_AC_BOOKMARKS | SDLK_SCANCODE_MASK,

			SDLK_BRIGHTNESSDOWN =
			(int)Scancode.SCANCODE_BRIGHTNESSDOWN | SDLK_SCANCODE_MASK,
			SDLK_BRIGHTNESSUP = (int)Scancode.SCANCODE_BRIGHTNESSUP | SDLK_SCANCODE_MASK,
			SDLK_DISPLAYSWITCH = (int)Scancode.SCANCODE_DISPLAYSWITCH | SDLK_SCANCODE_MASK,
			SDLK_KBDILLUMTOGGLE =
			(int)Scancode.SCANCODE_KBDILLUMTOGGLE | SDLK_SCANCODE_MASK,
			SDLK_KBDILLUMDOWN = (int)Scancode.SCANCODE_KBDILLUMDOWN | SDLK_SCANCODE_MASK,
			SDLK_KBDILLUMUP = (int)Scancode.SCANCODE_KBDILLUMUP | SDLK_SCANCODE_MASK,
			SDLK_EJECT = (int)Scancode.SCANCODE_EJECT | SDLK_SCANCODE_MASK,
			SDLK_SLEEP = (int)Scancode.SCANCODE_SLEEP | SDLK_SCANCODE_MASK,
			SDLK_APP1 = (int)Scancode.SCANCODE_APP1 | SDLK_SCANCODE_MASK,
			SDLK_APP2 = (int)Scancode.SCANCODE_APP2 | SDLK_SCANCODE_MASK,

			SDLK_AUDIOREWIND = (int)Scancode.SCANCODE_AUDIOREWIND | SDLK_SCANCODE_MASK,
			SDLK_AUDIOFASTFORWARD = (int)Scancode.SCANCODE_AUDIOFASTFORWARD | SDLK_SCANCODE_MASK
		}

		/* Key modifiers (bitfield) */
		[Flags]
		public enum Keymod : ushort
		{
			KMOD_NONE = 0x0000,
			KMOD_LSHIFT = 0x0001,
			KMOD_RSHIFT = 0x0002,
			KMOD_LCTRL = 0x0040,
			KMOD_RCTRL = 0x0080,
			KMOD_LALT = 0x0100,
			KMOD_RALT = 0x0200,
			KMOD_LGUI = 0x0400,
			KMOD_RGUI = 0x0800,
			KMOD_NUM = 0x1000,
			KMOD_CAPS = 0x2000,
			KMOD_MODE = 0x4000,
			KMOD_RESERVED = 0x8000,

			/* These are defines in the SDL headers */
			KMOD_CTRL = (KMOD_LCTRL | KMOD_RCTRL),
			KMOD_SHIFT = (KMOD_LSHIFT | KMOD_RSHIFT),
			KMOD_ALT = (KMOD_LALT | KMOD_RALT),
			KMOD_GUI = (KMOD_LGUI | KMOD_RGUI)
		}

		#endregion
    }
}
